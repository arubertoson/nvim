Commands for working with Git remotes and the underlying Git repo

See this [comparison], including a [table of commands].

[comparison]: https://jj-vcs.github.io/jj/latest/git-comparison/.

[table of commands]: https://jj-vcs.github.io/jj/latest/git-command-table

[1m[33mUsage:[0m [1m[32mjj git[0m [32m[OPTIONS][0m [32m<COMMAND>[0m

[1m[33mCommands:[0m
  [1m[32mclone[0m   Create a new repo backed by a clone of a Git repo
  [1m[32mexport[0m  Update the underlying Git repo with changes made in the repo
  [1m[32mfetch[0m   Fetch from a Git remote
  [1m[32mimport[0m  Update repo with changes made in the underlying Git repo
  [1m[32minit[0m    Create a new Git backed repo
  [1m[32mpush[0m    Push to a Git remote
  [1m[32mremote[0m  Manage Git remotes

[1m[33mOptions:[0m
  [1m[32m-h[0m, [1m[32m--help[0m
          Print help (see a summary with '-h')

[1m[33mGlobal Options:[0m
  [1m[32m-R[0m, [1m[32m--repository[0m[32m [0m[32m<REPOSITORY>[0m
          Path to repository to operate on
          
          By default, Jujutsu searches for the closest .jj/ directory in an ancestor of the current working directory.

      [1m[32m--ignore-working-copy[0m
          Don't snapshot the working copy, and don't update it
          
          By default, Jujutsu snapshots the working copy at the beginning of every command. The working copy is also updated at the end of the command, if the command modified the working-copy
          commit (`@`). If you want to avoid snapshotting the working copy and instead see a possibly stale working-copy commit, you can use `--ignore-working-copy`. This may be useful e.g. in a
          command prompt, especially if you have another process that commits the working copy.
          
          Loading the repository at a specific operation with `--at-operation` implies `--ignore-working-copy`.

      [1m[32m--ignore-immutable[0m
          Allow rewriting immutable commits
          
          By default, Jujutsu prevents rewriting commits in the configured set of immutable commits. This option disables that check and lets you rewrite any commit but the root commit.
          
          This option only affects the check. It does not affect the `immutable_heads()` revset or the `immutable` template keyword.

      [1m[32m--at-operation[0m[32m [0m[32m<AT_OPERATION>[0m
          Operation to load the repo at
          
          Operation to load the repo at. By default, Jujutsu loads the repo at the most recent operation, or at the merge of the divergent operations if any.
          
          You can use `--at-op=<operation ID>` to see what the repo looked like at an earlier operation. For example `jj --at-op=<operation ID> st` will show you what `jj st` would have shown you
          when the given operation had just finished. `--at-op=@` is pretty much the same as the default except that divergent operations will never be merged.
          
          Use `jj op log` to find the operation ID you want. Any unambiguous prefix of the operation ID is enough.
          
          When loading the repo at an earlier operation, the working copy will be ignored, as if `--ignore-working-copy` had been specified.
          
          It is possible to run mutating commands when loading the repo at an earlier operation. Doing that is equivalent to having run concurrent commands starting at the earlier operation.
          There's rarely a reason to do that, but it is possible.
          
          [aliases: at-op]

      [1m[32m--debug[0m
          Enable debug logging

      [1m[32m--color[0m[32m [0m[32m<WHEN>[0m
          When to colorize output
          
          [possible values: always, never, debug, auto]

      [1m[32m--quiet[0m
          Silence non-primary command output
          
          For example, `jj file list` will still list files, but it won't tell you if the working copy was snapshotted or if descendants were rebased.
          
          Warnings and errors will still be printed.

      [1m[32m--no-pager[0m
          Disable the pager

      [1m[32m--config[0m[32m [0m[32m<NAME=VALUE>[0m
          Additional configuration options (can be repeated)
          
          The name should be specified as TOML dotted keys. The value should be specified as a TOML expression. If string value doesn't contain any TOML constructs (such as array notation), quotes
          can be omitted.

      [1m[32m--config-file[0m[32m [0m[32m<PATH>[0m
          Additional configuration files (can be repeated)
